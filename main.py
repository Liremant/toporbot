from pyrogram import Client, filters
import google.generativeai as genai
import os
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
load_dotenv()
API_ID = os.getenv("API_ID")  # –ü–æ–ª—É—á–∏—Ç—å –Ω–∞ my.telegram.org
API_HASH = os.getenv("API_HASH")
SESSION_NAME = "topor_bot"
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")  # –ü–æ–ª—É—á–∏—Ç—å –Ω–∞ ai.google.dev

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–µ–π
if not API_ID or not API_HASH:
    print("–û—à–∏–±–∫–∞: API_ID –∏–ª–∏ API_HASH –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    exit()

if not GEMINI_API_KEY:
    print("–û—à–∏–±–∫–∞: GEMINI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    exit()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel("gemini-1.5-flash")

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
app = Client(SESSION_NAME, api_id=int(API_ID), api_hash=API_HASH)

TOPOR_PROMPT = """–ü–µ—Ä–µ–∫–∞–≤—ã—Ä–∫–∏–≤–∞–π –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å—Ç–∏–ª–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∂–µ–ª—Ç—É—à–Ω—ã—Ö –≥–∞–∑–µ—Ç.\n\n–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:\n‚ö°Ô∏è–ó–ê–ì–û–õ–û–í–û–ö 1‚ö°Ô∏è–ó–ê–ì–û–õ–û–í–û–ö 2‚ö°Ô∏è–ó–ê–ì–û–õ–û–í–û–ö 3‚ö°Ô∏è\n\n–ü—Ä–∞–≤–∏–ª–∞:\n- –ö–∞–∂–¥—ã–π —Ç–µ–∫—Å—Ç –º–µ–∂–¥—É ‚ö°Ô∏è - –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫\n- –ù–ï —Å–≤—è–∑—ã–≤–∞–π –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –µ–¥–∏–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n- –ö–∞–∂–¥—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å–∞–º –ø–æ —Å–µ–±–µ\n- –ö–ê–ü–° –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ\n- –ì—Ä—É–±—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è\n- –î–µ–ª–∞–π –∏–∑ –º—É—Ö–∏ —Å–ª–æ–Ω–∞\n- –ö–∞–∫ –±—É–¥—Ç–æ —ç—Ç–æ —Å–µ–Ω—Å–∞—Ü–∏—è –≤–µ–∫–∞\n\n–ü—Ä–∏–º–µ—Ä—ã:\n–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã—à–ª–æ \n‚ö°Ô∏è–†–ê–ó–†–ê–ë–´ –í–´–ö–ê–¢–ò–õ–ò –ì–û–í–ù–û–ê–ü–î–ï–ô–¢‚ö°Ô∏è–ê–ü–î–ï–ô–¢ –°–õ–û–ú–ê–õ –í –° –Å‚ö°Ô∏è–î–ï–í–ï–õ–û–ü–ï–†–´ –û–ë–û–°–†–ê–õ–ò–°–¨‚ö°Ô∏è\n\n- –°–∞–π—Ç –ª–∞–≥–∞–µ—Ç\n‚ö°Ô∏è–°–ï–†–í–ï–†–ê–ú –ü–ò–ó–î–ï–¶‚ö°Ô∏è–°–ò–°–ê–î–ú–ò–ù–´ –ü–†–û–ï–ë–ê–õ–ò–°–¨ ‚ö°Ô∏è –°–ê–ô–¢ - –í –° –Å‚ö°Ô∏è\n- –ö—Å—Ç–∞—Ç–∏ xray —É–º–µ–µ—Ç –∂—Ä–∞—Ç—å yaml. –ò –≤—Ä–æ–¥–µ –¥–∞–∂–µ toml.–ê —Ä–µ–º–Ω–∞ –Ω–µ—Ç.\n‚ö°Ô∏è–ü–ê–ù–ï–õ–¨ –ù–ï –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–¢ –û–ë–û–°–°–ê–ù–£–Æ –§–ò–®–ö–£ –ö–û–¢–û–†–£–Æ –Æ–ó–ê–Æ–¢ 1.5 –ó–ï–ú–õ–ï–ö–û–ü–ê ‚ö°Ô∏è–ï–ë–ê–ù–û–ï –î–ï–†–¨–ú–û ‚ö°Ô∏èVPN - –í –° –Å ‚ö°Ô∏è–†–ê–ó–†–ê–ë–´ –û–ë–õ–ï–ù–ò–õ–ò–°–¨ –ò –ù–ï –ó–ê–í–û–ó–Ø–¢ –ù–û–í–´–ï –§–ò–®–ö–ò\n- –í –ï–≤—Ä–æ–ø–µ —Ö–æ—Ç—è—Ç –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Å–µ–º–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∞–º–∏ ‚Äî –≤–µ—Å—å –ï–≤—Ä–æ—Å–æ—é–∑ –Ω–∞ –ø–æ—Ä–æ–≥–µ —Ç–æ—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –≥—Ä–∞–∂–¥–∞–Ω\n–ü–æ–ª–∏—Ç–∏–∫–∏ –ø–ª–∞–Ω–∏—Ä—É—é—Ç –æ–±—è–∑–∞—Ç—å –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã ¬´–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å¬ª –ø–µ—Ä–µ–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≤–∫–ª—é—á–∞—è –∑–∞—â–∏—â—ë–Ω–Ω—ã–µ —á–∞—Ç—ã ‚Äî —è–∫–æ–±—ã –¥–ª—è –∑–∞—â–∏—Ç—ã –¥–µ—Ç–µ–π –æ—Ç —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n–ù–∞ –¥–µ–ª–µ –∂–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ª—é–±–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–µ –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –µ–µ ‚Äî —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –Ω–µ –±—É–¥–µ—Ç\n–°—Ä–∞–∑—É –ø—è—Ç–Ω–∞–¥—Ü–∞—Ç—å —á–ª–µ–Ω–æ–≤-–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤ –ï–° –ø–æ–¥–µ—Ä–∂–∞–ª–∏ –≤–≤–µ–¥–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—è, –≤—Å–µ–≥–æ —Ç—Ä–∏ –≤—ã—Å—Ç—É–ø–∏–ª–∏ –ø—Ä–æ—Ç–∏–≤, –¥–µ–≤—è—Ç—å –ø–æ–∫–∞ –Ω–µ —Ä–µ—à–∏–ª–∏ ‚Äî –∏—Ç–æ–≥ –æ–∂–∏–¥–∞–µ—Ç—Å—è 14 –æ–∫—Ç—è–±—Ä—è\n‚ö°Ô∏è –ï–í–†–û–ü–ê -  –í –° –Å‚ö°Ô∏è –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–û–°–¢–ò –ü–ò–ó–î–ê ‚ö°Ô∏è–í–õ–ê–°–¢–ò –ó–ê–•–í–ê–¢–´–í–ê–Æ–¢ –ú–û–ó–ì –õ–Æ–î–ï–ô\n\n–ì–ª–∞–≤–Ω–æ–µ - –∫–∞–∂–¥—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–∂–¥—É –º–æ–ª–Ω–∏—è–º–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º –æ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã—Ö, –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫—Ä–∏—á–∞—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏.–ê –≤–æ—Ç –Ω–∞ —á—Ç–æ –Ω–∞–¥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –≤ —Ç–∞–∫–æ–º —Å—Ç–∏–ª–µ:{message_text}"""

# –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã topor —Å / –∏–ª–∏ \
def topor_filter(_, __, message):
    if not message.text:
        return False
    text = message.text.strip()
    return text.startswith('/topor') or text.startswith('\\topor')

topor_command_filter = filters.create(topor_filter)

@app.on_message(topor_command_filter & filters.me)
async def topor_handler(client, message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–ø–ª–∞–π
        if not message.reply_to_message:
            await message.edit("‚ùå –ù—É–∂–Ω–æ —Ä–µ–ø–ª–∞–π–Ω—É—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ä–µ–ø–ª–∞–π–Ω—É–ª–∏
        replied_message = message.reply_to_message
        text_to_process = replied_message.text or replied_message.caption or ""

        if not text_to_process:
            await message.edit("‚ùå –í —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞!")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
        await message.edit("‚ö°Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–æ–ø–æ—Ä–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏...")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
        prompt = TOPOR_PROMPT.format(message_text=text_to_process)

        # –û–±—Ä–∞—â–∞–µ–º—Å—è –∫ Gemini
        response = model.generate_content(prompt)
        result = response.text.strip()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await message.edit(result)

    except Exception as e:
        await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

@app.on_message(filters.command("start") & filters.me)
async def start_handler(client, message):
    await message.edit("üî• **–¢–æ–ø–æ—Ä-–±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**\n\n"
                      "–ö–æ–º–∞–Ω–¥—ã:\n"
                      "‚Ä¢ /topor –∏–ª–∏ \\topor - —Ä–µ–ø–ª–∞–π–Ω—É—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤\n\n"
                      "–†–µ–ø–ª–∞–π–Ω—å –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /topor –∏–ª–∏ \\topor –∏ –ø–æ–ª—É—á–∏ —Ç–æ–ø–æ—Ä–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏!")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¢–æ–ø–æ—Ä-–±–æ—Ç–∞...")
    app.run()
